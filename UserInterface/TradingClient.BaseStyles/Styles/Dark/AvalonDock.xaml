<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
                    xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Converters.xaml" />
        <ResourceDictionary Source="TabItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DocumentPaneControlStyle"
           TargetType="{x:Type xcad:LayoutDocumentPaneControl}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentPaneControl}" >
                    <Grid ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2"
                                Background="Transparent" />
                        <Grid Panel.ZIndex="1" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <xcad:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                       Grid.Row="0"
                                                       Grid.Column="0"
                                                       Margin="2,2,2,0"
                                                       IsItemsHost="true"
                                                       KeyboardNavigation.TabIndex="1" />
                            <xcad:DropDownButton x:Name="MenuDropDownButton"
                                                 Grid.Column="1"
                                                 Focusable="False"
                                                 Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" >
                                <xcad:DropDownButton.DropDownContextMenu>
                                    <xcad:ContextMenuEx ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}" >
                                        <xcad:ContextMenuEx.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type MenuItem}}"
                                                   TargetType="{x:Type xcad:MenuItemEx}" >
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}" />
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
                                            </Style>
                                        </xcad:ContextMenuEx.ItemContainerStyle>
                                    </xcad:ContextMenuEx>
                                </xcad:DropDownButton.DropDownContextMenu>
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinDocMenu.png" />
                            </xcad:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{StaticResource Dark_Background}"
                                BorderBrush="{StaticResource Dark_DarkBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle" >
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},
                                                       Path=Model.ChildrenCount}" 
                                     Value="0">
                            <Setter TargetName="MenuDropDownButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource TabItemStyle}"
                       TargetType="{x:Type TabItem}" >
                    <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate >
                    <xcad:LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate >
                    <xcad:LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnchorablePaneControlStyle"
           TargetType="{x:Type xcad:LayoutAnchorablePaneControl}" >
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorablePaneControl}" >
                    <Grid ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2"
                                Background="Transparent" />
                        <Border x:Name="ContentPanel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Cycle" >
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <xcad:AnchorablePaneTabPanel x:Name="HeaderPanel"
                                                     Grid.Row="1"
                                                     Margin="2,0,2,2"
                                                     Panel.ZIndex="1"
                                                     IsItemsHost="true"
                                                     KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}" >
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                      AncestorType={x:Type TabControl}},
                                                       Path=Items.Count}" 
                                     Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate >
                    <xcad:LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate >
                    <xcad:LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="xcad:AnchorablePaneTitle" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <xcad:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                      DropDownContextMenuDataContext="{Binding Path=LayoutItem,
                                                                                               RelativeSource={RelativeSource TemplatedParent}}" >
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector,
                                                                                    RelativeSource={RelativeSource TemplatedParent}}" />
                            </xcad:DropDownControlArea>

                            <xcad:DropDownButton Grid.Column="1"
                                                 DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                 DropDownContextMenuDataContext="{Binding Path=LayoutItem,
                                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                 Focusable="False"
                                                 Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                 ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}" >
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinMenu.png" />
                            </xcad:DropDownButton>

                            <Button x:Name="PART_AutoHidePin"
                                    Grid.Column="2"
                                    Command="{Binding Path=LayoutItem.AutoHideCommand,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                    Visibility="{Binding Path=IsEnabled,
                                                         RelativeSource={RelativeSource Self},
                                                         Mode=OneWay,
                                                         Converter={StaticResource BoolToVisibilityConverter}}" >
                                <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinAutoHide.png" />
                            </Button>

                            <Button x:Name="PART_HidePin"
                                    Grid.Column="3"
                                    Command="{Binding Path=LayoutItem.HideCommand,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    Focusable="False"
                                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                    ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                    Visibility="{Binding Path=IsEnabled,
                                                         RelativeSource={RelativeSource Self},
                                                         Mode=OneWay,
                                                         Converter={StaticResource BoolToVisibilityConverter}}" >
                                <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                                <Border x:Name="GlyphPanel" Width="13" Height="13" >
                                    <Path x:Name="Glyph"
                                              Data="F1 M2,2 L10,10 M10,2 L2,10 M2,10 Z"
                                              Height="13"
                                              Width="13"
                                              Opacity="0.4"
                                              Stroke="{StaticResource Dark_Foreground}"
                                              StrokeThickness="2" />
                                </Border>
                            </Button>


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden,
                                                       RelativeSource={RelativeSource Mode=Self}}" 
                                     Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AnchorSideTemplate"
                     TargetType="{x:Type xcad:LayoutAnchorSideControl}" >
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}" >
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate >
                    <StackPanel Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type xcad:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorGroupTemplate"
                     TargetType="{x:Type xcad:LayoutAnchorGroupControl}" >
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}" >
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate >
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorTemplate"
                     TargetType="{x:Type xcad:LayoutAnchorControl}" >
        <Border Margin="2"
                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                BorderThickness="1"
                Padding="2" >
            <ContentPresenter Content="{Binding Model,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                              ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                        Mode=OneWay,
                                                        RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                       Mode=FindAncestor}}"
                              ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                Mode=OneWay,
                                                                RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                               Mode=FindAncestor}}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="{x:Type xcad:OverlayWindow}"
           TargetType="{x:Type xcad:OverlayWindow}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:OverlayWindow}" >
                    <Canvas x:Name="PART_DropTargetsContainer"
                            Opacity="0.9" >
                        <Path x:Name="PART_PreviewBox"
                              Fill="AliceBlue"
                              Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                              StrokeThickness="2" />
                        <Grid x:Name="PART_DockingManagerDropTargets" >
                            <Image x:Name="PART_DockingManagerDropTargetLeft"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockLeft.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockRight.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Bottom"
                                   Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockBottom.PNG"
                                   Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockTop.PNG"
                                   Stretch="None" />
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets" >
                            <Grid Width="88"
                                  Height="88"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockPaneEmpty.PNG"
                                       Stretch="Uniform" />
                                <Border Name="PART_AnchorablePaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets" >
                            <Grid Width="88"
                                  Height="88"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Image Grid.RowSpan="3"
                                       Grid.ColumnSpan="3"
                                       Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/DockPaneEmpty.PNG"
                                       Stretch="Uniform" />
                                <Border Name="PART_DocumentPaneDropTargetTop"
                                        Grid.Row="0"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneTop.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight"
                                        Grid.Row="1"
                                        Grid.Column="2" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneRight.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom"
                                        Grid.Row="2"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneBottom.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft"
                                        Grid.Row="1"
                                        Grid.Column="0" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockDocPaneLeft.png"
                                           Stretch="None" />
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto"
                                        Grid.Row="1"
                                        Grid.Column="1" >
                                    <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/InnerDockPaneInside.png"
                                           Stretch="None" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DocumentHeaderTemplate" >
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate" >
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="icon"
                   Source="{Binding IconSource,
                                    Converter={StaticResource NullToDoNothingConverter}}"
                   Stretch="Uniform" />
            <TextBlock x:Name="title"
                       Grid.Column="1"
                       Margin="4,0,0,0"
                       Text="{Binding Title}"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" 
                         Value="{x:Null}">
                <Setter TargetName="title" Property="Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate" >
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate" >
        <TextBlock Text="{Binding Title}"
                   TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate" >
        <Image Source="{Binding IconSource,
                                Converter={StaticResource NullToDoNothingConverter}}"
               Stretch="Uniform" />
    </DataTemplate>

    <ContextMenu x:Key="AnchorableContextMenu" >
        <MenuItem Command="{Binding Path=FloatCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" />
        <MenuItem Command="{Binding Path=DockCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" />
        <MenuItem Command="{Binding Path=AutoHideCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" />
        <MenuItem Command="{Binding Path=HideCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <ContextMenu x:Key="DocumentContextMenu" >
        <MenuItem Command="{Binding Path=CloseCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Close}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=CloseAllButThisCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" />
        <MenuItem Command="{Binding Path=FloatCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_Float}" />
        <MenuItem Command="{Binding Path=DockAsDocumentCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" />
        <MenuItem Command="{Binding Path=NewHorizontalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=NewVerticalTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=MoveToNextTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
        <MenuItem Command="{Binding Path=MoveToPreviousTabGroupCommand}"
                  Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
                  Visibility="{Binding Path=IsEnabled,
                                       RelativeSource={RelativeSource Self},
                                       Mode=OneWay,
                                       Converter={StaticResource BoolToVisibilityConverter}}" />
    </ContextMenu>

    <Style x:Key="{x:Type xcad:DockingManager}"
           TargetType="{x:Type xcad:DockingManager}" >
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}" />
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}" />
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AnchorSideTemplate}" />
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AnchorGroupTemplate}" />
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}" />
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorableHeaderTemplate}" />
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}" />
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}" />
        <Setter Property="AnchorableContextMenu" Value="{StaticResource AnchorableContextMenu}" />
        <Setter Property="DocumentContextMenu" Value="{StaticResource DocumentContextMenu}" />
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}" />
        <Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}" />
        <Setter Property="Background" Value="{StaticResource Dark_Background}" />
        <Setter Property="Foreground" Value="{StaticResource Dark_Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:DockingManager}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid FlowDirection="LeftToRight" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="1"
                                              Content="{TemplateBinding LayoutRootPanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="2"
                                              Content="{TemplateBinding RightSidePanel}" />
                            <ContentPresenter Grid.Row="1"
                                              Grid.Column="0"
                                              Content="{TemplateBinding LeftSidePanel}" />
                            <ContentPresenter Grid.Row="0"
                                              Grid.Column="1"
                                              Content="{TemplateBinding TopSidePanel}" />
                            <ContentPresenter Grid.Row="2"
                                              Grid.Column="1"
                                              Content="{TemplateBinding BottomSidePanel}" />
                            <ContentPresenter x:Name="PART_AutoHideArea"
                                              Grid.Row="1"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              Content="{TemplateBinding AutoHideWindow}" />
                            <!--    -->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutGridResizerControl}"
           TargetType="{x:Type xcad:LayoutGridResizerControl}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutGridResizerControl}" >
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutDocumentControl}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentControl}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <ContentPresenter Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
                        <!--
                            <ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                            ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                        -->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutDocumentTabItem}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentTabItem}" >
                    <xcad:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
                                              DropDownContextMenuDataContext="{Binding LayoutItem,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}" >
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2"
                                        Background="Transparent" />
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding DocumentHeaderTemplate,
                                                                            Mode=OneWay,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                           Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector,
                                                                                    Mode=OneWay,
                                                                                    RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                                   Mode=FindAncestor}}" />
                                <!--  Close button should be moved out to the container style  -->
                                <Button x:Name="DocumentCloseButton"
                                        Grid.Column="1"
                                        Margin="5,0,0,0"
                                        Command="{Binding Path=LayoutItem.CloseCommand,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                        ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                        Visibility="Hidden" >
                                    <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                                    <Border x:Name="GlyphPanel" Width="13" Height="13" >
                                        <Path x:Name="Glyph"
                                              Data="F1 M2,2 L10,10 M10,2 L2,10 M2,10 Z"
                                              Height="13"
                                              Width="13"
                                              Opacity="0.4"
                                              Stroke="{StaticResource Dark_Foreground}"
                                              StrokeThickness="2" />
                                    </Border>
                                </Button>
                            </Grid>
                        </Border>
                    </xcad:DropDownControlArea>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" 
                                     Value="true">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=CanClose}" 
                                     Value="false">
                            <Setter TargetName="DocumentCloseButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutAnchorableTabItem}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableTabItem}" >
                    <xcad:DropDownControlArea DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
                                              DropDownContextMenuDataContext="{Binding LayoutItem,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}" >
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" >
                            <Grid >
                                <ContentPresenter Content="{Binding Model,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding AnchorableHeaderTemplate,
                                                                            Mode=OneWay,
                                                                            RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                           Mode=FindAncestor}}"
                                                  ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector,
                                                                                    Mode=OneWay,
                                                                                    RelativeSource={RelativeSource AncestorType={x:Type xcad:DockingManager},
                                                                                                                   Mode=FindAncestor}}" />
                                <xcad:DropDownControlArea Grid.Column="0"
                                                          DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                          DropDownContextMenuDataContext="{Binding Path=Model,
                                                                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </xcad:DropDownControlArea>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xcad:LayoutAnchorableControl}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableControl}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.TabNavigation="Cycle" >
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border x:Name="Header" >
                                <xcad:AnchorablePaneTitle Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>

                            <ContentPresenter Grid.Row="1"
                                              Content="{Binding LayoutItem.View,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              FlowDirection="{TemplateBinding FlowDirection}" />

                            <!--
                                <ContentPresenter
                                FlowDirection="{TemplateBinding FlowDirection}"
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding LayoutItemTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding LayoutItemTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>
                            -->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger >
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutDocumentFloatingWindowControl}"
           TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}" >
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10"
                                    ShowSystemMenu="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutDocumentFloatingWindowControl}" >
                    <Grid >
                        <Border x:Name="WindowBorder"
                                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="3" >
                            <Grid Margin="3" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Content="{Binding Model.RootDocument,
                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate,
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}" />


                                    <Button Grid.Column="2"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinMaximize.png" />
                                    </Button>

                                    <Button Grid.Column="2"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource BoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinRestore.png" />
                                    </Button>

                                    <Button Grid.Column="3"
                                            Command="{Binding Path=RootDocumentLayoutItem.CloseCommand,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
                                            Visibility="{Binding Path=IsEnabled,
                                                                 RelativeSource={RelativeSource Self},
                                                                 Mode=OneWay,
                                                                 Converter={StaticResource BoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                                        <Border x:Name="GlyphPanel" Width="13" Height="13" >
                                            <Path x:Name="Glyph"
                                                  Data="F1 M2,2 L10,10 M10,2 L2,10 M2,10 Z"
                                                  Height="13"
                                                  Width="13"
                                                  Opacity="0.4"
                                                  Stroke="{StaticResource Dark_Foreground}"
                                                  StrokeThickness="2" />
                                        </Border>
                                    </Button>
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutAnchorableFloatingWindowControl}"
           TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}" >
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="0"
                                    ResizeBorderThickness="10"
                                    ShowSystemMenu="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:LayoutAnchorableFloatingWindowControl}" >
                    <Grid >
                        <Border x:Name="WindowBorder"
                                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="3" >
                            <Grid Margin="3" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Border Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" >
                                        <xcad:DropDownControlArea DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                                  DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem,
                                                                                                           RelativeSource={RelativeSource TemplatedParent}}" >
                                            <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent,
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate,
                                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                              ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector,
                                                                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                        </xcad:DropDownControlArea>
                                    </Border>


                                    <xcad:DropDownButton x:Name="SinglePaneContextMenu"
                                                         Grid.Column="1"
                                                         DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                         DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem,
                                                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                         Focusable="False"
                                                         Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                         ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}"
                                                         Visibility="{Binding Path=Model.IsSinglePane,
                                                                              RelativeSource={RelativeSource TemplatedParent},
                                                                              Converter={StaticResource BoolToVisibilityConverter}}"
                                                         shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinMenu.png" />
                                    </xcad:DropDownButton>

                                    <Button Grid.Column="2"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Visibility="{Binding IsMaximized,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinMaximize.png" />
                                    </Button>

                                    <Button Grid.Column="2"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Visibility="{Binding IsMaximized,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource BoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinRestore.png" />
                                    </Button>

                                    <Button Grid.Column="3"
                                            Command="{Binding HideWindowCommand,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                            Visibility="{Binding Path=IsEnabled,
                                                                 RelativeSource={RelativeSource Self},
                                                                 Mode=OneWay,
                                                                 Converter={StaticResource BoolToVisibilityConverter}}"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True" >
                                        <!--<Image Source="/Xceed.Wpf.AvalonDock;component/Themes/Generic/Images/PinClose.png" />-->
                                        <Border x:Name="GlyphPanel" Width="13" Height="13" >
                                            <Path x:Name="Glyph"
                                                  Data="F1 M2,2 L10,10 M10,2 L2,10 M2,10 Z"
                                                  Height="13"
                                                  Width="13"
                                                  Opacity="0.4"
                                                  Stroke="{StaticResource Dark_Foreground}"
                                                  StrokeThickness="2" />
                                        </Border>
                                    </Button>
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="Padding" Value="3" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xcad:LayoutAutoHideWindowControl}"
           TargetType="{x:Type xcad:LayoutAutoHideWindowControl}" >
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>

    <Style x:Key="{x:Type xcad:NavigatorWindow}"
           TargetType="{x:Type xcad:NavigatorWindow}" >
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="16"
                                    CornerRadius="3,3,3,3"
                                    GlassFrameThickness="4"
                                    ResizeBorderThickness="10" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcad:NavigatorWindow}" >
                    <Grid >
                        <Border x:Name="WindowBorder"
                                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                                BorderThickness="3" >
                            <Grid Margin="5" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="54" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="42" />
                                </Grid.RowDefinitions>

                                <Grid >
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding SelectedDocument.LayoutElement.IconSource,
                                                                Converter={StaticResource NullToDoNothingConverter}}"
                                               Stretch="None" />
                                        <TextBlock Grid.Column="1"
                                                   Margin="4,0,0,0"
                                                   VerticalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding SelectedDocument.LayoutElement.Title}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <TextBlock VerticalAlignment="Center"
                                               Text="{Binding SelectedDocument.LayoutElement.Description}"
                                               TextTrimming="CharacterEllipsis" />
                                </Grid>

                                <Grid Grid.Row="1" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid Margin="5" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Margin="0,3,0,4"
                                                   FontWeight="Bold"
                                                   Text="Active Tool Windows" />
                                        <ListBox Grid.Row="1"
                                                 MaxHeight="400"
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 FocusVisualStyle="{x:Null}"
                                                 ItemsSource="{Binding Anchorables}"
                                                 SelectedItem="{Binding SelectedAnchorable,
                                                                        Mode=TwoWay}" >
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem" >
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate >
                                                    <Grid >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Image Source="{Binding LayoutElement.IconSource,
                                                                                Converter={StaticResource NullToDoNothingConverter}}"
                                                               Stretch="None" />
                                                        <TextBlock Grid.Column="1"
                                                                   Margin="4,2,0,2"
                                                                   Text="{Binding LayoutElement.Title}"
                                                                   TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                    <Grid Grid.Column="1"
                                          Margin="5" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Margin="0,3,0,4"
                                                   FontWeight="Bold"
                                                   Text="Active Files" />
                                        <ListBox Grid.Row="1"
                                                 MaxHeight="400"
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 FocusVisualStyle="{x:Null}"
                                                 ItemsSource="{Binding Documents}"
                                                 SelectedItem="{Binding SelectedDocument,
                                                                        Mode=TwoWay}" >
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="ListBoxItem" >
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate >
                                                    <Grid >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <Image Source="{Binding LayoutElement.IconSource,
                                                                                Converter={StaticResource NullToDoNothingConverter}}"
                                                               Stretch="None" />
                                                        <TextBlock Grid.Column="1"
                                                                   Margin="4,2,0,2"
                                                                   Text="{Binding LayoutElement.Title}"
                                                                   TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate >
                                                    <WrapPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                        </ListBox>
                                    </Grid>
                                </Grid>

                                <Grid Grid.Row="2" >
                                    <TextBlock VerticalAlignment="Center"
                                               Text="{Binding SelectedDocument.LayoutElement.ToolTip}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>