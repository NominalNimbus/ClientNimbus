<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pg="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:avalon="http://schemas.xceed.com/wpf/xaml/avalondock"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="OptionsToggleButtonStyle"
           TargetType="{x:Type RadioButton}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}" >
                    <Grid SnapsToDevicePixels="True" >
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" />
                        <Border x:Name="MiddleBorder"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" >
                            <Border x:Name="InnerBorder"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Padding="{TemplateBinding Padding}" >
                                <StackPanel x:Name="StackPanel"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" >
                                    <ContentPresenter x:Name="Content"
                                                      Margin="1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding Content}"
                                                      RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource PropertyGridMouseOverBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PropertyGridMouseOverBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
                            <Setter TargetName="OuterBorder" Property="TextElement.Foreground" Value="#FF9E9E9E" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource CheckedBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PropertyGridCheckedBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource PropertyGridInnerBorderBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource PropertyGridPressedBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PropertyGridPressedBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MiddleBorder" Property="Background" Value="{StaticResource PropertyGridMiddleBorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearFilterButtonStyle"
           TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Grid SnapsToDevicePixels="True" >
                        <Border x:Name="OuterBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" />
                        <Border x:Name="MiddleBorder"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" >
                            <Border x:Name="InnerBorder"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Padding="{TemplateBinding Padding}" >
                                <StackPanel x:Name="StackPanel"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" >
                                    <ContentPresenter x:Name="Content"
                                                      Margin="1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding Content}"
                                                      RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource PropertyGridMouseOverBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PropertyGridMouseOverBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
                            <Setter TargetName="OuterBorder" Property="TextElement.Foreground" Value="#FF9E9E9E" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource PropertyGridPressedBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource PropertyGridPressedBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="GlyphBrush" 
                     Color="#FF31347C" />

    <ControlTemplate x:Key="ExpanderToggleButton"
                     TargetType="{x:Type ToggleButton}" >
        <Grid >
            <Rectangle x:Name="Rectangle"
                       Margin="0,0,0,0"
                       Fill="Transparent" />
            <Path x:Name="Up_Arrow"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{StaticResource GlyphBrush}"
                  RenderTransformOrigin="0.5,0.5" >
                <Path.RenderTransform>
                    <TransformGroup >
                        <ScaleTransform ScaleX="1"
                                        ScaleY="1" />
                        <SkewTransform AngleX="0" AngleY="0" />
                        <RotateTransform Angle="-90" />
                        <TranslateTransform X="0" Y="0" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <Path x:Name="Down_Arrow"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 4 L 4 0 L 8 4 Z"
                  Fill="{StaticResource GlyphBrush}"
                  RenderTransformOrigin="0.5,0.5"
                  Visibility="Collapsed" >
                <Path.RenderTransform>
                    <TransformGroup >
                        <ScaleTransform ScaleX="1"
                                        ScaleY="1" />
                        <SkewTransform AngleX="0" AngleY="0" />
                        <RotateTransform Angle="135" />
                        <TranslateTransform X="0" Y="0" />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Down_Arrow" Property="Visibility" Value="Visible" />
                <Setter TargetName="Up_Arrow" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Down_Arrow" Property="OpacityMask" Value="#FF000000" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderStyle"
           TargetType="{x:Type Expander}" >
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{StaticResource Dark_Background}" />
        <Setter Property="Foreground" Value="{StaticResource Dark_Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}" >
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource Dark_DarkBorderBrush}" >
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}" />
                                <ContentPresenter Grid.Column="1"
                                                  Margin="1"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontWeight="Bold" />
                            </Grid>
                        </Border>
                        <Border x:Name="ExpandSite"
                                Grid.Row="1"
                                Background="{StaticResource Dark_Background}"
                                Padding="10 0 0 0"
                                Visibility="Collapsed" >
                            <Border Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="0"
                                    Padding="0" >
                                <Border.Resources />
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PropertyExpanderStyle"
           TargetType="{x:Type Expander}" >
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}" >
                    <Grid >
                        <Border x:Name="ExpandSite"
                                Grid.Row="1"
                                Padding="0 0 0 0"
                                Visibility="Collapsed" >
                            <Border Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderThickness="0"
                                    Padding="0" >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type pg:PropertyGrid}, ResourceId=SelectedObjectAdvancedOptionsMenu}" >
        <MenuItem Command="pg:PropertyItemCommands.ResetValue"
                  Header="Reset Value" />
    </ContextMenu>

    <Style TargetType="{x:Type pg:WatermarkTextBox}" >
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type pg:PropertyItem}" >
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pg:PropertyItemBase}" >
                    <Border ContextMenu="{Binding AdvancedOptionsMenu,
                                                  RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                 AncestorType=pg:PropertyGrid}}"
                            ContextMenuService.Placement="Bottom" >
                        <Grid HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type pg:PropertyGrid}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border x:Name="PART_Name"
                                    Margin="0,0,1,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}" >
                                        <Grid Margin="2,2,2,2"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton x:Name="_expandableButton"
                                                      Grid.Column="0"
                                                      IsChecked="{Binding IsExpanded,
                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                      OverridesDefaultStyle="True"
                                                      Template="{StaticResource ExpanderToggleButton}"
                                                      Visibility="{Binding IsExpandable,
                                                                           RelativeSource={RelativeSource TemplatedParent},
                                                                           Converter={StaticResource BoolToVisibilityConverter}}" />

                                        <TextBlock Name="DisplayTextBlock"
                                                   Grid.Column="1"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   Foreground="{StaticResource Dark_Foreground}"
                                                   Text="{Binding DisplayName,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </Grid>

                                    <Grid Grid.Column="1"
                                          Margin="5,0,5,0"
                                          HorizontalAlignment="Right"
                                          ContextMenu="{Binding AdvancedOptionsMenu,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                               AncestorType=pg:PropertyGrid}}"
                                          Visibility="{Binding ShowAdvancedOptions,
                                                               RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                              AncestorType=pg:PropertyGrid},
                                                               Converter={StaticResource BoolToVisibilityConverter}}"
                                          pg:ContextMenuUtilities.OpenOnMouseLeftButtonClick="True" >

                                        <Image x:Name="_optionsImage"
                                               Width="11"
                                               Height="11"
                                               ToolTip="{Binding AdvancedOptionsTooltip,
                                                                 RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                            </Border>

                            <Border x:Name="PART_Editor"
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    KeyboardNavigation.DirectionalNavigation="None" >
                                <ContentControl x:Name="PART_ValueContainer"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Editor}"
                                                Focusable="False"
                                                IsEnabled="{Binding IsReadOnly,
                                                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                   AncestorType=pg:PropertyGrid},
                                                                    Converter={StaticResource InverseBoolConverter}}"
                                                IsTabStop="False" />
                            </Border>

                            <Expander x:Name="_propertyExpander"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="2"
                                      IsEnabled="True"
                                      IsExpanded="{TemplateBinding IsExpanded}"
                                      Style="{StaticResource PropertyExpanderStyle}" >
                                <pg:PropertyItemsControl x:Name="PART_PropertyItemsControl"
                                                         Focusable="False"
                                                         IsTabStop="False"
                                                         ItemContainerStyle="{Binding PropertyContainerStyle,
                                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                         ItemsSource="{Binding Properties,
                                                                               RelativeSource={RelativeSource TemplatedParent}}" >
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate >
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </pg:PropertyItemsControl>
                            </Expander>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Name" Property="Background" Value="#556788" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Name" Property="Background" Value="#43577B" />
                            <Setter TargetName="PART_Name" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ValueContainer" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                        <Trigger SourceName="_expandableButton" Property="Visibility" Value="Visible">
                            <Setter Property="Focusable" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pg:PropertyGrid}" >
        <Style.Resources>
            <pg:SelectedObjectConverter x:Key="objectConverter" />
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource Dark_Background}" />
        <Setter Property="Foreground" Value="{StaticResource Dark_Foreground}" />
        <Setter Property="BorderBrush" Value="#43577B" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectedObjectType" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedObject, Converter={StaticResource objectConverter}, ConverterParameter=Type}" />
        <Setter Property="SelectedObjectTypeName" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedObject, Converter={StaticResource objectConverter}, ConverterParameter=TypeName}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pg:PropertyGrid}" >
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid Margin="{TemplateBinding Padding}" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Margin="6,2,0,4"
                                        Orientation="Horizontal"
                                        Visibility="{Binding ShowTitle,
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BoolToVisibilityConverter}}" >
                                <TextBlock FontWeight="Bold"
                                           Text="{TemplateBinding SelectedObjectTypeName}" />
                                <TextBlock Margin="5,0,0,0"
                                           Text="{TemplateBinding SelectedObjectName}" />
                            </StackPanel>

                            <Grid x:Name="toolsContainer"
                                  Grid.Row="1"
                                  Margin="4,0,4,4" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="sortButtonContainer"
                                      Margin="4"
                                      Visibility="{Binding ShowSortOptions,
                                                           RelativeSource={RelativeSource TemplatedParent},
                                                           Converter={StaticResource BoolToVisibilityConverter}}" >
                                    <StackPanel Margin="1"
                                                Orientation="Horizontal" >
                                        <RadioButton VerticalAlignment="Center"
                                                     IsChecked="{Binding IsCategorized,
                                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                                     Style="{StaticResource OptionsToggleButtonStyle}"
                                                     ToolTip="Categorized" >
                                            <Image Width="16"
                                                   Height="16"
                                                   Source="../Resources/Images/PropertyGrid/Category.png" />
                                        </RadioButton>
                                        <RadioButton VerticalAlignment="Center"
                                                     IsChecked="{Binding IsCategorized,
                                                                         RelativeSource={RelativeSource TemplatedParent},
                                                                         Converter={StaticResource InverseBoolConverter},
                                                                         Mode=OneWay}"
                                                     Style="{StaticResource OptionsToggleButtonStyle}"
                                                     ToolTip="Alphabetical" >
                                            <Image Width="16"
                                                   Height="16"
                                                   Source="../Resources/Images/PropertyGrid/Sort.png" />
                                        </RadioButton>
                                    </StackPanel>
                                </Grid>

                                <Border x:Name="searchBoxContainer"
                                        Grid.Column="1"
                                        Margin="4,4,0,4"
                                        Background="{StaticResource Dark_Background}"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        Visibility="{Binding ShowSearchBox,
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BoolToVisibilityConverter}}" >
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <pg:WatermarkTextBox x:Name="_txtFilter"
                                                             Background="Transparent"
                                                             Foreground="{StaticResource Dark_Foreground}"
                                                             Text="{Binding Filter,
                                                                            RelativeSource={RelativeSource TemplatedParent},
                                                                            UpdateSourceTrigger=PropertyChanged}"
                                                             Watermark="{TemplateBinding FilterWatermark}" >
                                            <pg:WatermarkTextBox.Style>
                                                <Style TargetType="Control" >
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderThickness" Value="1" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </pg:WatermarkTextBox.Style>

                                        </pg:WatermarkTextBox>

                                        <Button Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                Command="pg:PropertyGridCommands.ClearFilter"
                                                Style="{StaticResource ClearFilterButtonStyle}" >
                                            <Image Width="16"
                                                   Height="16"
                                                   Source="../Resources/Images/PropertyGrid/Delete.png" />
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>

                            <Grid Grid.Row="2" >
                                <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                    <pg:PropertyItemsControl x:Name="PART_PropertyItemsControl"
                                                             VerticalAlignment="Top"
                                                             Background="{StaticResource Dark_Background}"
                                                             Focusable="False"
                                                             IsTabStop="False"
                                                             ItemContainerStyle="{Binding PropertyContainerStyle,
                                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                             ItemsSource="{Binding Properties,
                                                                                   RelativeSource={RelativeSource TemplatedParent}}" >
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate >
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.GroupStyle>
                                            <GroupStyle >
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}" >
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate >
                                                                    <Border >
                                                                        <Expander Header="{Binding Name}"
                                                                                  IsExpanded="True"
                                                                                  Style="{StaticResource ExpanderStyle}" >
                                                                            <ItemsPresenter />
                                                                        </Expander>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ItemsControl.GroupStyle>

                                    </pg:PropertyItemsControl>
                                </ScrollViewer>

                                <Thumb x:Name="PART_DragThumb"
                                       Width="5"
                                       Margin="6,0,0,0"
                                       HorizontalAlignment="Left"
                                       Cursor="SizeWE" >
                                    <Thumb.Template>
                                        <ControlTemplate >
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>

                            </Grid>

                            <GridSplitter Grid.Row="3"
                                          Height="3"
                                          HorizontalAlignment="Stretch"
                                          Visibility="{Binding ShowSummary,
                                                               RelativeSource={RelativeSource TemplatedParent},
                                                               Converter={StaticResource BoolToVisibilityConverter}}" />
                            <StackPanel Grid.Row="4"
                                        Margin="0,0,0,5"
                                        Visibility="{Binding ShowSummary,
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BoolToVisibilityConverter}}" >
                                <TextBlock FontWeight="Bold"
                                           Padding="2 2 2 0"
                                           Text="{Binding SelectedPropertyItem.DisplayName,
                                                          RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock Padding="5 2 2 0"
                                           Text="{Binding SelectedPropertyItem.Description,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                           TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition SourceName="searchBoxContainer" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="sortButtonContainer" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="toolsContainer" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Property Grid editors-->
    <Style TargetType="{x:Type xctk:PropertyGridEditorCheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Padding" Value="-5 0 0 0"/>
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorDecimalUpDown}" BasedOn="{StaticResource {x:Type xctk:DecimalUpDown}}">
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorDoubleUpDown}" BasedOn="{StaticResource {x:Type xctk:DoubleUpDown}}">
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorIntegerUpDown}" BasedOn="{StaticResource {x:Type xctk:IntegerUpDown}}">
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style TargetType="{x:Type xctk:PropertyGridEditorTextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="3" />
    </Style>

</ResourceDictionary>