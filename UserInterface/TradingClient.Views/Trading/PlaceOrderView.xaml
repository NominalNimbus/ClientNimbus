<Window x:Class="TradingClient.Views.PlaceOrderView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:extensions="clr-namespace:TradingClient.BaseStyles.Extensions;assembly=TradingClient.BaseStyles"
        xmlns:beh="clr-namespace:TradingClient.BaseStyles.Behaviours;assembly=TradingClient.BaseStyles"
        xmlns:converters="clr-namespace:TradingClient.BaseStyles.Converters;assembly=TradingClient.BaseStyles"
        xmlns:avalon="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:enums="clr-namespace:TradingClient.Data.Contracts;assembly=TradingClient.Data.Contracts"
        xmlns:viewModelInterfaces="clr-namespace:TradingClient.ViewModelInterfaces;assembly=TradingClient.ViewModelInterfaces"
        Title="{Binding Title, TargetNullValue=''}"
        Width="380"
        SizeToContent="Height"
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize">

    <i:Interaction.Behaviors>
        <beh:DialogResultBehavior DialogResultTrigger="{Binding DialogResult}" />
    </i:Interaction.Behaviors>

    <Window.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/TradingClient.BaseStyles;component/Styles/Dark/Main.xaml" />
                <ResourceDictionary Source="pack://application:,,,/TradingClient.BaseStyles;component/Styles/Dark/DataGrid.xaml" />
                
            </ResourceDictionary.MergedDictionaries>

            <Style BasedOn="{StaticResource DoubleUpDownDefaultStyle}"
                   TargetType="xctk:DoubleUpDown">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Increment" Value="{Binding ElementName=CbInstrument, Path=SelectedItem.PriceIncrement}" />
                <Setter Property="FormatString" Value="{Binding InstrumentPriceFormat}" />
                <Setter Property="Minimum" Value="0" />
            </Style>

            <Image x:Key="ArrowImage"
                   Width="16"
                   Height="16"
                   Source="../Resources/Images/Arrow.png"
                   x:Shared="False" />

            <Style BasedOn="{StaticResource TextBlockDefaultStyle}"
                   TargetType="TextBlock">
                <Setter Property="Margin" Value="3" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            
            <CollectionViewSource x:Key="Level1Source" Source="{Binding LastListTick}"/>
            <CollectionViewSource x:Key="Level2Source" Source="{Binding LastTick.Level2}"/>

            <CompositeCollection x:Key="CombinedTickCollection">
                <CollectionContainer Collection="{Binding Source={StaticResource Level1Source}}" />
                <CollectionContainer Collection="{Binding Source={StaticResource Level2Source}}" />
            </CompositeCollection>

            <avalon:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Style x:Key="ButtonPriceStyle"
                           BasedOn="{StaticResource {x:Type Button}}"
                           TargetType="Button">
                <Style.Resources>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
                <Setter Property="Content" Value="{StaticResource ArrowImage}" />
                <Setter Property="DockPanel.Dock" Value="Right" />
                <Setter Property="Background" Value="{StaticResource Dark_Background}" />
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.BasedOn>
                <Style TargetType="Control">
                    <Setter Property="Background" Value="{StaticResource Dark_Background}" />
                    <Setter Property="Foreground" Value="{StaticResource Dark_Foreground}" />
                </Style>
            </Style.BasedOn>
        </Style>
    </Window.Style>

    <StackPanel>
        <StackPanel.Resources>
            <converters:PriceToStringConverter x:Key="PriceConverter" />
        </StackPanel.Resources>
        
        <Grid Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="Data Feed:" />
            <ComboBox Grid.Column="1"
                      IsEnabled="{Binding IsModifying,
                                          Converter={converters:InverseBoolConverter},
                                          TargetNullValue=False}"
                      ItemsSource="{Binding Path=DataFeeds}"
                      SelectedValue="{Binding DataFeed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
				      Margin="3"/>
            
            <TextBlock Grid.Row="1" Text="Symbol:" />
            <ComboBox x:Name="CbInstrument"
                      Grid.Column="1"
                      Grid.Row="1"
                      DisplayMemberPath="Symbol"
                      IsEnabled="{Binding IsModifying,
                                          Converter={converters:InverseBoolConverter},
                                          TargetNullValue=False}"
                      ItemsSource="{Binding Path=Instruments}"
                      SelectedValue="{Binding Symbol, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      SelectedValuePath="Symbol"
				      Margin="3">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel 
                                                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>

            <TextBlock Grid.Row="2"  Text="Account:" />
            <ListBox Grid.Column="1"
                      Grid.Row="2"
                      Height="150"
                      SelectionMode="Single"
                      IsEnabled="{Binding IsModifying,
                                          Converter={converters:InverseBoolConverter},
                                          TargetNullValue=False}"
                      ItemsSource="{Binding Accounts }" 
                      SelectedItem="{Binding SelectedAccount, Mode=TwoWay}"
                      DisplayMemberPath="AccountInfo"
				      Margin="3"/>
            
            <CheckBox Grid.Row="3" Grid.Column="1" Content="Server side execution" Margin="3"
                          IsChecked="{Binding ServerSide, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Grid.Row="4" Text="Volume:" />
            <xctk:DoubleUpDown Grid.Row="4"
                               Grid.Column="1"
                               FormatString="{Binding InstrumentQuantityFormat}"
                               Increment="{Binding InstrumentQuantityIncrement}"
								Margin="3"
                                IsEnabled="{Binding IsModifying,
                                                       Converter={converters:InverseBoolConverter},
                                                       TargetNullValue=False}"
                                   Minimum="{Binding InstrumentQuantityIncrement}" 
                                   Value="{Binding Order.Quantity}" />

            <TextBlock Grid.Row="5" Text="SL Offset:" />
            <xctk:DoubleUpDown Grid.Row="5" Grid.Column="1"
                                       Value="{Binding Order.SLOffset}" 
                                       Margin="3"
                                       Minimum="0" 
                                       Increment="{Binding InstrumentPriceIncrement}" 
                                       FormatString="{Binding InstrumentPriceFormat}"/>

            <TextBlock Grid.Row="6"  Text="TP Offset:" />
            <xctk:DoubleUpDown Grid.Row="6" Grid.Column="1"
                               Value="{Binding Order.TPOffset}" 
                               Minimum="0" 
                               Margin="3"
                               Increment="{Binding InstrumentPriceIncrement}" 
                               FormatString="{Binding InstrumentPriceFormat}"/>

            <TextBlock Grid.Row="7" Text="Type:" />

            <ComboBox x:Name="CbOrderType"
                          Grid.Row="7"
                          Grid.Column="1"
						  Margin="3"
                          IsEnabled="{Binding IsModifying,
                                              Converter={converters:InverseBoolConverter},
                                              TargetNullValue=False}"
                          ItemsSource="{extensions:EnumValues {x:Type enums:OrderType}}"
                          SelectedItem="{Binding Order.OrderType}" />

            <TextBlock Grid.Row="8" Text="Limit/Stop price:" />

            <DockPanel Grid.Row="8"
                           Grid.Column="1"
						   Margin="3"
                           IsEnabled="{Binding ElementName=CbOrderType,
                                               Path=SelectedItem,
                                               Converter={converters:IsOrderLimitOrStopConverter},
                                               TargetNullValue=False}">
                    <Button Style="{StaticResource ButtonPriceStyle}"
                            Command="{Binding SetPriceCommand}"
                            Width="20" Height="20"
                            Margin="2" 
                            IsEnabled="{Binding IsModifying,
                                                       Converter={converters:InverseBoolConverter},
                                                       TargetNullValue=False}" />
                    <xctk:DoubleUpDown 
                                       Value="{Binding Order.Price}" 
                                       Minimum="0" 
                                       Increment="{Binding InstrumentPriceIncrement}" 
                                       FormatString="{Binding InstrumentPriceFormat}"
                                       IsEnabled="{Binding IsModifying,
                                                       Converter={converters:InverseBoolConverter},
                                                       TargetNullValue=False}"/>
            </DockPanel>

            <TextBlock Grid.Row="9" Text="TIF:" />
            <ComboBox Name="CbTIF"
				Margin="3"
                          Grid.Row="9"
                          Grid.Column="1"
                          ItemsSource="{extensions:EnumValues {x:Type enums:TimeInForce}}"
                          SelectedItem="{Binding Order.TimeInForce}" 
                          IsEnabled="{Binding IsModifying,
                                                       Converter={converters:InverseBoolConverter},
                                                       TargetNullValue=False}"/>
               
        </Grid>

		<Border Height="1" Background="White" Margin="0,0,0,1" SnapsToDevicePixels="True"></Border>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <TextBlock Text="Ask(Vol.)" Foreground="{StaticResource Dark_AskBrush}" FontWeight="Bold" Margin="3" />
            <TextBlock Text="Bid(Vol.)" Foreground="{StaticResource Dark_BidBrush}" FontWeight="Bold" Margin="3"/>
        </StackPanel>
            
        <DataGrid HeadersVisibility="None" HorizontalAlignment="Center" CanUserResizeColumns="False" IsEnabled="False"  
                  GridLinesVisibility="All" HorizontalGridLinesBrush="White" VerticalGridLinesBrush="White" BorderThickness="1,1,0,0" BorderBrush="White" 
                          ItemsSource="{StaticResource CombinedTickCollection}" Background="Transparent" AutoGenerateColumns="False" CanUserAddRows="False"
                          HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Margin="3">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Ask(Vol.)">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Style.Setters>
                                                <Setter Property="Foreground" Value="{StaticResource Dark_AskBrush}"/>
                                                <Setter Property="FontSize" Value="13"/>
                                            </Style.Setters>
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource PriceConverter}"
                                                          FallbackValue="-"
                                                          Mode="OneWay">
                                                <Binding Path="Ask" />
                                                <Binding ElementName="CbInstrument"
                                                         Path="SelectedItem.Digits" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Text=" (" />
                                    <TextBlock Text="{Binding AskSize}"/>
                                    <TextBlock Text=")" Padding="0,0,3,0" />
                                </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Bid(Vol.)" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Style.Setters>
                                                <Setter Property="Foreground" Value="{StaticResource Dark_BidBrush}"/>
                                                <Setter Property="FontSize" Value="13"/>
                                            </Style.Setters>
                                        </Style>
                                    </StackPanel.Resources>
                                <TextBlock Padding="3,0,0,0">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource PriceConverter}"
                                                          FallbackValue="-"
                                                          Mode="OneWay">
                                                <Binding Path="Bid" />
                                                <Binding ElementName="CbInstrument"
                                                         Path="SelectedItem.Digits" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Text=" (" />
                                    <TextBlock Text="{Binding BidSize}"/>
                                    <TextBlock Text=")"/>
                                </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Border Height="1" Background="White" Margin="0,3,0,1" SnapsToDevicePixels="True"></Border>
        
        <TextBlock HorizontalAlignment="Left"
                   FontWeight="Bold"
                   Foreground="{StaticResource Dark_AskBrush}"
                   Text="{Binding Errors,
                                  Mode=TwoWay,
                                  UpdateSourceTrigger=PropertyChanged}" 
                   Margin="10"
                   TextWrapping="Wrap"/>


        <Grid>

            <StackPanel Orientation="Horizontal" Visibility="{Binding IsPlaceNewOrder, Converter={StaticResource BoolToVisibilityConverter}}">
                <Button Command="{Binding PlaceOrderCommand}" CommandParameter="{x:Static enums:Side.Buy}"
                        FontWeight="Bold"
                        FontSize="12"
                        Content="Buy"
                        IsDefault="True"
                        Foreground="{StaticResource Dark_AskBrush}" />
                <Button Command="{Binding PlaceOrderCommand}" CommandParameter="{x:Static enums:Side.Sell}" 
                        FontWeight="Bold"
                        FontSize="12"
                        Content="Sell"
                        IsDefault="True"
                        Foreground="{StaticResource Dark_BidBrush}" />

            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

                <Button Content="Modify" Visibility="{Binding IsModifying, Converter={StaticResource BoolToVisibilityConverter}}"
                    Width="90"
                    Command="{Binding OkCommand}" 
                    HorizontalAlignment="Right"
                    IsDefault="True" />
                <Button Content="Cancel"
                    Width="90"
                    Command="{Binding CancelCommand}" 
                    HorizontalAlignment="Right"
                    IsCancel="True" />

            </StackPanel>
        </Grid>
    </StackPanel>

</Window>
