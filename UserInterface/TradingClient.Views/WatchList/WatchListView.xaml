<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:beh="clr-namespace:TradingClient.BaseStyles.Behaviours;assembly=TradingClient.BaseStyles"
                    xmlns:converters="clr-namespace:TradingClient.BaseStyles.Converters;assembly=TradingClient.BaseStyles"
                    xmlns:interfaces="clr-namespace:TradingClient.ViewModelInterfaces;assembly=TradingClient.ViewModelInterfaces"
                    xmlns:avalon="http://schemas.xceed.com/wpf/xaml/avalondock">

    <DataTemplate x:Key="WatchListTemplate"
                  DataType="{x:Type interfaces:IWatchListViewModel}">
        <DataTemplate.Resources>
            <avalon:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:PriceToStringConverter x:Key="PriceToStringConverter" />
        </DataTemplate.Resources>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Menu>
                <Menu.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Height" Value="16" />
                    </Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="Margin" Value="0,1,2,1" />
                        <Setter Property="Height" Value="20" />
                    </Style>
                </Menu.Resources>
                <Menu.Style>
                    <Style TargetType="Control">
                        <Setter Property="Background" Value="{StaticResource Dark_Background}" />
                        <Setter Property="Foreground" Value="{StaticResource Dark_Foreground}" />
                    </Style>
                </Menu.Style>
                <MenuItem Command="{Binding ExportCommand}"
                          Header="Export"
                          ToolTip="Export">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/SaveList_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding ImportCommand}"
                          Header="Import"
                          ToolTip="Import">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/LoadList_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Columns"
                           ToolTip="Add/Remove columns">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/Columns_16x16.png"/>
                    </MenuItem.Icon>
                    <MenuItem IsCheckable="True" IsChecked="{Binding DateCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Date" x:Name="DateMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding BidCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Bid" x:Name="BidMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding BidSizeCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Bid Size" x:Name="BidSizeMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding AskCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Ask" x:Name="AskMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding AskSizeCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Ask Size" x:Name="AskSizeMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding PriceCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Price" x:Name="PriceMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding OpenCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Open" x:Name="OpenMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding HighCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="High" x:Name="HighMenuItem"/>
                    <MenuItem IsCheckable="True" IsChecked="{Binding LowCol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Low" x:Name="LowMenuItem"/>
                </MenuItem>
            </Menu>

            <DataGrid Grid.Row="1"
                      Margin="0,3,0,0"
                      AutoGenerateColumns="False"
                      CanUserReorderColumns="True"
                      CanUserSortColumns="True"
                      CanUserAddRows="True"
                      ColumnWidth="*"
                      ItemsSource="{Binding Items, Mode=TwoWay}"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                      x:Name="MainDataGrid">

                <i:Interaction.Behaviors>
                    <beh:DataGridDoubleClickToCommandBehavior Command="{Binding PlaceOrderCommand}" />
                </i:Interaction.Behaviors>
                
                <DataGrid.ContextMenu>
                    <ContextMenu Focusable="False">
                        <ContextMenu.Resources>
                            <Style TargetType="Image">
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                            </Style>
                        </ContextMenu.Resources>
                        <MenuItem Command="{Binding PlaceOrderCommand}"
                                  Header="New Order">
                            <MenuItem.Icon>
                                <Image Source="../Resources/Images/PlaceOrder_16x16.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding AddToDepthViewCommand}"
                                  Header="Add to depth view">
                            <MenuItem.Icon>
                                <Image Source="../Resources/Images/DepthView_16x16.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RemoveSelectedCommand}"
                                  Header="Remove">
                            <MenuItem.Icon>
                                <Image Source="../Resources/Images/Delete_16x16.png" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Symbol"
                                            SortMemberPath="Symbol">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Padding="5,5,0,0"
                                         Text="{Binding Symbol,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=LostFocus}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Feed"
                                            SortMemberPath="DataFeed">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Background="Transparent"
                                         BorderThickness="0"
                                         Foreground="{StaticResource Dark_Foreground}"
                                         Padding="3,0,0,0"
                                         ItemsSource="{Binding Source={x:Reference MainDataGrid}, Path=DataContext.DataFeeds}"
                                         SelectedItem="{Binding DataFeed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <DataGridTextColumn Binding="{Binding Date,
                                                          Mode=OneWay,
                                                          Converter={converters:DateTimeToStringConverter Format='G'}}"
                                        CanUserSort="False"
                                        Header="Time" 
                                        Visibility="{Binding Source={x:Reference DateMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    
                    <DataGridTemplateColumn CanUserSort="False"
                                            Header="Ask" 
                                            Visibility="{Binding Source={x:Reference AskMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="{Binding AskChange, Converter={StaticResource ProfitToForegroundConverter}, Mode=OneWay, IsAsync=True}">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PriceToStringConverter}">
                                            <Binding Mode="OneWay"
                                                     Path="Ask" />
                                            <Binding Mode="OneWay"
                                                     Path="Digits" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding AskSize,
                                                          Mode=OneWay,
                                                          StringFormat={}{0:0.##}, Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="Ask Size" 
                                        Visibility="{Binding Source={x:Reference AskSizeMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DataGridTemplateColumn CanUserSort="False"
                                            Header="Bid" 
                                            Visibility="{Binding Source={x:Reference BidMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="{Binding BidChange, Converter={StaticResource ProfitToForegroundConverter}, Mode=OneWay, IsAsync=True}">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource PriceToStringConverter}">
                                            <Binding Mode="OneWay"
                                                     Path="Bid" />
                                            <Binding Mode="OneWay"
                                                     Path="Digits" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding BidSize,
                                                          Mode=OneWay,
                                                          StringFormat={}{0:0.##}, Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="Bid Size" 
                                        Visibility="{Binding Source={x:Reference BidSizeMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    
                    <DataGridTextColumn 
                                        Binding="{Binding Price, Mode=OneWay, Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="Price"
                                        Visibility="{Binding Source={x:Reference PriceMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DataGridTextColumn Binding="{Binding Open,
                                                          Mode=OneWay,
                                                          Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="Open"
                                        Visibility="{Binding Source={x:Reference OpenMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DataGridTextColumn Binding="{Binding High,
                                                          Mode=OneWay,
                                                          Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="High"
                                        Visibility="{Binding Source={x:Reference HighMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DataGridTextColumn Binding="{Binding Low,
                                                          Mode=OneWay,
                                                          Converter={converters:EmptyValuePresenterConverter ZeroEqualsPresentation=''}}"
                                        CanUserSort="False"
                                        Header="Low"
                                        Visibility="{Binding Source={x:Reference LowMenuItem}, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <DataGridTemplateColumn Width="30" Header=" ">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                         AncestorType={x:Type DataGrid}},
                                                          Path=DataContext.RemoveCurrentCommand}"
                                        CommandParameter="{Binding}"
                                        Padding="0">
                                    <Image Width="16"
                                           Height="16"
                                           Source="../Resources/Images/Delete_16x16.png"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>